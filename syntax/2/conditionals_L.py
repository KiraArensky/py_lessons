"""
Условные операторы позволяют программе выполнять различные действия в зависимости от условий.
В Python используются конструкции `if`, `elif` и `else`, а также операторы сравнения и присваивания.
"""

"""
## 1. Оператор if
Оператор `if` выполняет блок кода, если указанное условие истинно (True).
Пример:
"""
number = 10
if number > 0:
    print("Число положительное")

"""
## 2. Оператор if-else
Если условие `if` ложно (False), выполняется код из блока `else`.
Пример:
"""
number = -5
if number > 0:
    print("Число положительное")
else:
    print("Число отрицательное")

"""
## 3. Оператор if-elif-else
Если есть несколько условий, используется `elif` (сокращение от "else if").
Пример:
"""
number = 0
if number > 0:
    print("Число положительное")
elif number < 0:
    print("Число отрицательное")
else:
    print("Число равно нулю")

"""
## 4. Операторы сравнения
Операторы сравнения используются для проверки условий и возвращают `True` или `False`:
- `==` – равно
- `!=` – не равно
- `>` – больше
- `<` – меньше
- `>=` – больше или равно
- `<=` – меньше или равно
Пример:
"""
a = 5
b = 10
print(a == b)  # False
print(a != b)  # True
print(a < b)   # True
print(a >= b)  # False
"""

## 5. Операторы присваивания
Операторы присваивания используются для изменения значения переменной:
- `=` – простое присваивание
- `+=` – добавление значения к переменной
- `-=` – вычитание
- `*=` – умножение
- `/=` – деление
- `//=` – целочисленное деление
- `%=` – остаток от деления
- `**=` – возведение в степень
Пример:
"""
x = 10
x += 5  # Эквивалент x = x + 5
print(x)  # 15

y = 20
y //= 3  # Эквивалент y = y // 3
print(y)  # 6
"""

## 6. Логические операторы в условных выражениях

### Оператор `and`
Используется, если оба условия должны быть истинными:
"""
age = 25
if age > 18 and age < 30:
    print("Вы молодой человек")

"""
### Оператор `or`
Используется, если хотя бы одно из условий истинно:
"""
is_student = True
has_discount_card = False
if is_student or has_discount_card:
    print("Вы имеете право на скидку")

"""
### Оператор `not`
Инвертирует булево значение:
"""
is_raining = False
if not is_raining:
    print("Можно гулять без зонта")

"""
## 7. Вложенные условия
В Python можно использовать условия внутри других условий:
"""
number = 15
if number > 0:
    print("Число положительное")
    if number % 3 == 0:
        print("Число делится на 3")

"""
## 8. Тернарный оператор
Короткая запись `if-else`, используемая для присваивания значений:
"""
number = -10
result = "положительное" if number > 0 else "отрицательное или ноль"
print(result)

"""
Условные операторы, операторы сравнения и присваивания позволяют управлять логикой выполнения программы,
делая её более гибкой и адаптивной к разным ситуациям.
"""
